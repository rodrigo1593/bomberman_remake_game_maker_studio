<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// initialize virtual keys 

// localvars
var width = sprite_get_width(spr_dpad); 
var height = sprite_get_height(spr_dpad); 

//dpad coordinates
dpad_x = x * display_get_gui_width()/view_wview; 
dpad_y = y * display_get_gui_height()/view_hview; 

margin = 128; // add a margin of error area around each key to accomodate the player's finger leaving the sprite bounding box

var xx = dpad_x - margin; 
var yy = dpad_y - margin; 

// the vkeys are made by segmenting the dpad sprite into thirds horizontally and vertically - this allows for eight directions
global.vkey_left = virtual_key_add(xx,yy,width/3+margin,height+2*margin,vk_left); 
global.vkey_up = virtual_key_add(xx,yy,width+2*margin,height/3+margin,vk_up); 
global.vkey_right = virtual_key_add(xx+margin+(width/3)*2,yy,width/3+margin,height+2*margin,vk_right); 
global.vkey_down = virtual_key_add(xx,yy+margin+(height/3)*2,width+2*margin,height/3+margin,vk_down); 

// show virtual keys (for debug)
//virtual_key_show(global.vkey_left); 
//virtual_key_show(global.vkey_up); 
//virtual_key_show(global.vkey_right); 
//virtual_key_show(global.vkey_down); 


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw dpad

draw_sprite_ext(spr_dpad,0,dpad_x,dpad_y,1,1,0,c_white,0.5); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// override draw_self() so that only GUI renders
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>128,128</point>
  </PhysicsShapePoints>
</object>
